(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{11:function(n,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.withMDXComponents=void 0;var t,s=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n},o=a(1),p=(t=o)&&t.__esModule?t:{default:t};var c=p.default.createContext({}),l=c.Provider,r=c.Consumer;e.withMDXComponents=function(n){return function(e){var a=e.components,t=function(n,e){var a={};for(var t in n)e.indexOf(t)>=0||Object.prototype.hasOwnProperty.call(n,t)&&(a[t]=n[t]);return a}(e,["components"]);return p.default.createElement(r,null,function(e){return p.default.createElement(n,s({components:a||e},t))})}};e.default=function(n){var e=n.components,a=n.children;return p.default.createElement(l,{value:e},a)}},12:function(n,e,a){"use strict";function t(n,e){if(null==n)return{};var a,t,s=function(n,e){if(null==n)return{};var a,t,s={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],e.indexOf(a)>=0||(s[a]=n[a]);return s}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(s[a]=n[a])}return s}a.d(e,"a",function(){return t})},13:function(n,e,a){"use strict";function t(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}a.d(e,"a",function(){return t})},14:function(n,e,a){"use strict";function t(n,e){for(var a=0;a<e.length;a++){var t=e[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function s(n,e,a){return e&&t(n.prototype,e),a&&t(n,a),n}a.d(e,"a",function(){return s})},15:function(n,e,a){"use strict";function t(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}a.d(e,"a",function(){return t})},16:function(n,e,a){"use strict";function t(n){return(t=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}a.d(e,"a",function(){return t})},17:function(n,e,a){"use strict";function t(n){return(t="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function s(n){return(s="function"===typeof Symbol&&"symbol"===t(Symbol.iterator)?function(n){return t(n)}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":t(n)})(n)}var o=a(15);function p(n,e){return!e||"object"!==s(e)&&"function"!==typeof e?Object(o.a)(n):e}a.d(e,"a",function(){return p})},18:function(n,e,a){"use strict";function t(n,e){return(t=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}function s(n,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&t(n,e)}a.d(e,"a",function(){return s})},19:function(n,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t=a(20);Object.defineProperty(e,"MDXTag",{enumerable:!0,get:function(){return o(t).default}});var s=a(11);function o(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(e,"MDXProvider",{enumerable:!0,get:function(){return o(s).default}})},20:function(n,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t,s=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n},o=function(){function n(n,e){for(var a=0;a<e.length;a++){var t=e[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}return function(e,a,t){return a&&n(e.prototype,a),t&&n(e,t),e}}(),p=a(1),c=(t=p)&&t.__esModule?t:{default:t},l=a(11);var r={inlineCode:"code",wrapper:"div"},i=function(n){function e(){return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(n,e){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!==typeof e&&"function"!==typeof e?n:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(n,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(n,e):n.__proto__=e)}(e,p.Component),o(e,[{key:"render",value:function(){var n=this.props,e=n.name,a=n.parentName,t=n.props,o=void 0===t?{}:t,p=n.children,l=n.components,i=void 0===l?{}:l,u=n.Layout,d=n.layoutProps,m=i[a+"."+e]||i[e]||r[e]||e;return u?c.default.createElement(u,s({components:i},d),c.default.createElement(m,o,p)):c.default.createElement(m,o,p)}}]),e}();e.default=(0,l.withMDXComponents)(i)},336:function(n,e,a){"use strict";a.r(e),a.d(e,"default",function(){return h}),a.d(e,"tableOfContents",function(){return g}),a.d(e,"frontMatter",function(){return w});var t=a(12),s=a(13),o=a(14),p=a(17),c=a(16),l=a(18),r=a(1),i=a.n(r),u=a(19),d=a(337),m=a.n(d),k=a(338),f=a.n(k),h=function(n){function e(n){var a;return Object(s.a)(this,e),(a=Object(p.a)(this,Object(c.a)(e).call(this,n))).layout=null,a}return Object(l.a)(e,n),Object(o.a)(e,[{key:"render",value:function(){var n=this.props,e=n.components;Object(t.a)(n,["components"]);return i.a.createElement(u.MDXTag,{name:"wrapper",components:e},i.a.createElement(u.MDXTag,{name:"h1",components:e,props:{id:"building-swift-shop---week-6-dec-29-2019---jan-04-2020"}},"Building Swift Shop - Week 6 (Dec 29 2019 - Jan 04, 2020)"),i.a.createElement(u.MDXTag,{name:"h3",components:e,props:{id:"jan-05-2020"}},"Jan 05, 2020"),i.a.createElement(u.MDXTag,{name:"p",components:e},"The past few weeks have primarily been about improving the product page and its edit form modal. It\u2019s gone through several iterations now, and I think it\u2019s finally in a good place. Here\u2019s a quick overview of the changes:"),i.a.createElement(u.MDXTag,{name:"h2",components:e,props:{id:"pass-1"}},"Pass 1:"),i.a.createElement(u.MDXTag,{name:"pre",components:e,props:{className:"language-swift"}},i.a.createElement(u.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-swift",metastring:null,dangerouslySetInnerHTML:{__html:'<span class="token keyword">struct</span> <span class="token builtin">ProductPage</span><span class="token punctuation">:</span> <span class="token builtin">View</span> <span class="token punctuation">{</span>\n  @<span class="token builtin">ObservedObject</span> <span class="token keyword">private</span> <span class="token keyword">var</span> model<span class="token punctuation">:</span> <span class="token builtin">ProductPageViewModel</span> <span class="token operator">=</span> <span class="token function">ProductPageViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  @<span class="token builtin">State</span> <span class="token keyword">var</span> editSheetOpen <span class="token operator">=</span> <span class="token boolean">false</span>\n  @<span class="token builtin">State</span> <span class="token keyword">var</span> editedProduct<span class="token punctuation">:</span> <span class="token builtin">SimpleProduct</span><span class="token operator">?</span>\n  @<span class="token builtin">State</span> <span class="token keyword">var</span> isNewProduct <span class="token operator">=</span> <span class="token boolean">false</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function">addProductClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    editSheetOpen <span class="token operator">=</span> <span class="token boolean">true</span>\n    isNewProduct <span class="token operator">=</span> <span class="token boolean">true</span>\n    editedProduct <span class="token operator">=</span> <span class="token function">SimpleProduct</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function">productRowClicked</span><span class="token punctuation">(</span>product<span class="token punctuation">:</span> <span class="token builtin">SimpleProduct</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    editSheetOpen <span class="token operator">=</span> <span class="token boolean">true</span>\n    isNewProduct <span class="token operator">=</span> <span class="token boolean">false</span>\n    editedProduct <span class="token operator">=</span> product\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function">onSaveProduct</span><span class="token punctuation">(</span><span class="token number">_</span> product<span class="token punctuation">:</span> <span class="token builtin">SimpleProduct</span><span class="token punctuation">,</span> isNew<span class="token punctuation">:</span> <span class="token builtin">Bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    model<span class="token punctuation">.</span><span class="token function">onSaveProduct</span><span class="token punctuation">(</span>product<span class="token punctuation">,</span> isNew<span class="token punctuation">)</span>\n    editSheetOpen <span class="token operator">=</span> <span class="token boolean">false</span>\n    isNewProduct <span class="token operator">=</span> <span class="token boolean">false</span>\n    editedProduct <span class="token operator">=</span> <span class="token constant">nil</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">var</span> body<span class="token punctuation">:</span> some <span class="token builtin">View</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"ul",components:e},i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"We couple a lot of unnecessary state to the ProductPage here. Why should the product page view have to keep track of what product is being edited, or whether or not it\u2019s new? The only things that should be concerned with ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"isNewProduct")," should be:",i.a.createElement(u.MDXTag,{name:"ul",components:e,parentName:"li"},i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"The function that brings us into edit mode (add new product, edit existing product), which should set this state"),i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"The ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"onSaveProduct")," function inside ProductPageViewModel (not shown), which should read the state to decide which database call to make")))),i.a.createElement(u.MDXTag,{name:"h2",components:e,props:{id:"pass-2"}},"Pass 2:"),i.a.createElement(u.MDXTag,{name:"pre",components:e,props:{className:"language-swift"}},i.a.createElement(u.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-swift",metastring:null,dangerouslySetInnerHTML:{__html:'<span class="token keyword">struct</span> <span class="token builtin">ProductPage</span><span class="token punctuation">:</span> <span class="token builtin">View</span> <span class="token punctuation">{</span>\n  @<span class="token builtin">ObservedObject</span> <span class="token keyword">private</span> <span class="token keyword">var</span> model<span class="token punctuation">:</span> <span class="token builtin">ProductPageViewModel</span> <span class="token operator">=</span> <span class="token function">ProductPageViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  @<span class="token builtin">State</span> <span class="token keyword">var</span> editSheetOpen <span class="token operator">=</span> <span class="token boolean">false</span>\n  <span class="token keyword">private</span> <span class="token keyword">var</span> editFormModel <span class="token operator">=</span> <span class="token function">ProductEditFormModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function">addProductClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    editSheetOpen <span class="token operator">=</span> <span class="token boolean">true</span>\n    editFormModel<span class="token punctuation">.</span><span class="token function">newProduct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function">productRowClicked</span><span class="token punctuation">(</span>product<span class="token punctuation">:</span> <span class="token builtin">SimpleProduct</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    editSheetOpen <span class="token operator">=</span> <span class="token boolean">true</span>\n    editFormModel<span class="token punctuation">.</span><span class="token function">editProduct</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function">onSaveProduct</span><span class="token punctuation">(</span><span class="token number">_</span> product<span class="token punctuation">:</span> <span class="token builtin">SimpleProduct</span><span class="token punctuation">,</span> isNew<span class="token punctuation">:</span> <span class="token builtin">Bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    model<span class="token punctuation">.</span><span class="token function">onSaveProduct</span><span class="token punctuation">(</span>product<span class="token punctuation">,</span> isNew<span class="token punctuation">)</span>\n    editSheetOpen <span class="token operator">=</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">var</span> body<span class="token punctuation">:</span> some <span class="token builtin">View</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"ul",components:e},i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"isNewProduct")," moved from page state into ProductEditFormModel\u200a\u2014\u200aProductPage no longer has to care about it"),i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"A ProductEditFormModel instance is created in the product page and later passed down to the edit form View constructor\u200a\u2014\u200athis allows for calling methods on the edit form model directly (",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"newProduct")," and ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"editProduct"),")",i.a.createElement(u.MDXTag,{name:"ul",components:e,parentName:"li"},i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"When the \u201cAdd Product\u201d button was tapped, we\u2019d set the sheet open status and call ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"newProduct()")," on the edit form model. This would set ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"isNew")," to true within the model."),i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"When a product row was selected for editing, we\u2019d set the sheet open status and call ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"editProduct(product)")," on the edit form model. The model would accept the given product to edit, and internally set ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"isNew")," false.")))),i.a.createElement(u.MDXTag,{name:"p",components:e},"A slight improvement, but what still sucks about this?"),i.a.createElement(u.MDXTag,{name:"ul",components:e},i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"Creating the ProductEditFormModel in a view other than the ProductEditForm itself feels like a strange pattern, and the only win is that we move ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"isNewProduct")," out of the ProductPage"),i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"Just as ProductPage shouldn\u2019t care about ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"isNewProduct"),", the edit form shouldn\u2019t either. It should operate on a Product structure, call a function when it\u2019s done, and nothing more"),i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"editFormModel.newProduct()")," is responsible for creating an empty product to operate on. This reduces testability, and if we\u2019re debugging this code, it\u2019s potentially another layer to dig through to find what we\u2019re looking for. It should instead be up to the caller to decide what a \u201cnew product\u201d is. Making this change would have been a small amount of work from this point, but pass 3 addresses the issue in a different way.")),i.a.createElement(u.MDXTag,{name:"h2",components:e,props:{id:"pass-3-current-implementation"}},"Pass 3 (Current implementation):"),i.a.createElement(u.MDXTag,{name:"p",components:e},"The latest iteration wraps most of the needed functionality up into this SheetStatus enum, whose ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"p"},"open")," variant has some associated values:"),i.a.createElement(u.MDXTag,{name:"pre",components:e,props:{className:"language-swift"}},i.a.createElement(u.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-swift",metastring:null,dangerouslySetInnerHTML:{__html:'<span class="token keyword">enum</span> <span class="token builtin">SheetStatus</span> <span class="token punctuation">{</span>\n  <span class="token keyword">case</span> closed\n  <span class="token keyword">case</span> <span class="token function">open</span><span class="token punctuation">(</span>product<span class="token punctuation">:</span> <span class="token builtin">SimpleProduct</span><span class="token punctuation">,</span> isNew<span class="token punctuation">:</span> <span class="token builtin">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"p",components:e},"Usage:"),i.a.createElement(u.MDXTag,{name:"pre",components:e,props:{className:"language-swift"}},i.a.createElement(u.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-swift",metastring:null,dangerouslySetInnerHTML:{__html:'<span class="token keyword">struct</span> <span class="token builtin">ProductPage</span><span class="token punctuation">:</span> <span class="token builtin">View</span> <span class="token punctuation">{</span>\n  @<span class="token builtin">ObservedObject</span> <span class="token keyword">private</span> <span class="token keyword">var</span> model<span class="token punctuation">:</span> <span class="token builtin">ProductPageViewModel</span> <span class="token operator">=</span> <span class="token function">ProductPageViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  @<span class="token builtin">State</span> <span class="token keyword">var</span> editSheetStatus<span class="token punctuation">:</span> <span class="token builtin">SheetStatus</span> <span class="token operator">=</span> <span class="token punctuation">.</span>closed\n\n  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function">addProductClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    editSheetStatus <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token builtin">SimpleProduct</span><span class="token punctuation">.</span><span class="token function">newEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> isNew<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function">productRowClicked</span><span class="token punctuation">(</span>product<span class="token punctuation">:</span> <span class="token builtin">SimpleProduct</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    editSheetStatus <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>product<span class="token punctuation">,</span> isNew<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function">onSaveProduct</span><span class="token punctuation">(</span><span class="token number">_</span> editedProduct<span class="token punctuation">:</span> <span class="token builtin">SimpleProduct</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    model<span class="token punctuation">.</span><span class="token function">onSaveProduct</span><span class="token punctuation">(</span>product<span class="token punctuation">,</span> editSheetStatus<span class="token punctuation">.</span><span class="token function">isNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// isNew here is a helper fn on the enum; () -> Bool</span>\n    editSheetStatus <span class="token operator">=</span> <span class="token punctuation">.</span>closed\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">var</span> body<span class="token punctuation">:</span> some <span class="token builtin">View</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"ul",components:e},i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"ProductPage no longer has to manage the ProductEditFormModel instance\u200a\u2014\u200astrange pattern gone!"),i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"The sheet open/closed boolean has been replaced with a simple enum property, set to the ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"closed")," variant by default"),i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"When we edit or add a product we can open the edit sheet, pass a product to operate on (new or existing), and optionally set ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"isNew")," all in one short expression"),i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},"The ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"isNew")," state now only lives inside the enum variant, and neither the ProductPage nor ProductEditForm views have to store it (In fact, it\u2019s no longer even referenced anywhere outside of the functions shown above)")),i.a.createElement(u.MDXTag,{name:"p",components:e},"This implementation feels much better than any of the others. One of the only caveats is that we can\u2019t use the enum\u2019s value directly for opening and closing the ",i.a.createElement(u.MDXTag,{name:"a",components:e,parentName:"p",props:{href:"https://github.com/AndreaMiotto/PartialSheet"}},"PartialSheet")," view, because it expects to be passed a ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"p"},"Binding<Bool>"),". For now, an in-line binding declaration works:"),i.a.createElement(u.MDXTag,{name:"pre",components:e},i.a.createElement(u.MDXTag,{name:"code",components:e,parentName:"pre",props:{metastring:null}},"partialSheet(presented: Binding<Bool>(get: self.editSheetStatus.isOpen, set: self.closeForm)) {\n")),i.a.createElement(u.MDXTag,{name:"ul",components:e},i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"isOpen")," is a small helper function defined on the SheetStatus enum")),i.a.createElement(u.MDXTag,{name:"pre",components:e,props:{className:"language-swift"}},i.a.createElement(u.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-swift",metastring:null,dangerouslySetInnerHTML:{__html:'<span class="token keyword">extension</span> <span class="token builtin">SheetStatus</span> <span class="token punctuation">{</span>\n  <span class="token keyword">func</span> <span class="token function">isOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">Bool</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token keyword">case</span> <span class="token punctuation">.</span>closed <span class="token operator">=</span> <span class="token keyword">self</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"ul",components:e},i.a.createElement(u.MDXTag,{name:"li",components:e,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},"self.closeForm")," is a private ProductPage method that simply sets editSheetStatus to ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"li"},".closed"),". The compiler doesn\u2019t like us setting the property in an in-line closure, but Xcode doesn\u2019t say why. It instead highlights an unrelated line with a false positive error:")),i.a.createElement("div",{align:"center"},i.a.createElement("a",{target:"GP_IMG",href:m.a},i.a.createElement("img",{src:m.a,style:{maxWidth:"100%"}}))),i.a.createElement(u.MDXTag,{name:"p",components:e},"When the closure ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:e,parentName:"p"},"set: { self.editSheetStatus = .closed }")," is removed, the reported false positive is gone and the app compiles:"),i.a.createElement("div",{align:"center"},i.a.createElement("a",{target:"GP_IMG",href:f.a},i.a.createElement("img",{src:f.a,style:{maxWidth:"100%"}}))),i.a.createElement(u.MDXTag,{name:"p",components:e},"This is a great example of how terrible the error reporting in SwiftUI+Xcode is currently. It\u2019s a great loss of productivity, and I hope Apple is putting effort into improving it."))}}]),e}(i.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"jan-05-2020",level:3,title:"Jan 05, 2020",children:[]},{id:"pass-1",level:2,title:"Pass 1:",children:[]},{id:"pass-2",level:2,title:"Pass 2:",children:[]},{id:"pass-3-current-implementation",level:2,title:"Pass 3 (Current implementation):",children:[]}]},w={}},337:function(n,e,a){n.exports=a.p+"static/media/SwiftShop_wk6_err1.e2a11462.png"},338:function(n,e,a){n.exports=a.p+"static/media/SwiftShop_wk6_err2.bad169f9.png"}}]);
//# sourceMappingURL=14.25c1c560.chunk.js.map